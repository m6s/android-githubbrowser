apply from: 'dependencies.gradle'

buildscript {
    apply from: 'dependencies.gradle'
    repositories {
        jcenter()
    }
    dependencies {
        // See dependencies.gradle for declaration of plugins.
        classpath gradlePlugins.android
        // Compile-time annotation processing.
        classpath gradlePlugins.apt
        // Backport of some Java 8 language features such as Lambdas and method references.
        classpath gradlePlugins.retrolambda
        // Needed for Lint + Retrolambda.
        classpath gradlePlugins.lombok
        // Publish to play market from Gradle
        classpath gradlePlugins.playPublisher
    }
    // Part of workaround for Lint + Retrolambda.
    configurations.classpath.exclude group: 'com.android.tools.external.lombok'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

allprojects {
    repositories {
        jcenter()
    }

    // Workaround to prevent Gradle from stealing focus from other apps during tests run/etc.
    // https://gist.github.com/artem-zinnatullin/4c250e04636e25797165
    tasks.withType(JavaForkOptions) {
        jvmArgs '-Djava.awt.headless=true'
    }
}

subprojects {
    project.plugins.whenPluginAdded { plugin ->
        if ('com.android.build.gradle.AppPlugin'.equals(plugin.class.name) || 'com.android.build.gradle.LibraryPlugin'.equals(plugin.class.name)) {
            android {
                compileSdkVersion sdk.compileVersion
                buildToolsVersion sdk.buildToolsVersion
                compileOptions {
                    sourceCompatibility JavaVersion.VERSION_1_8
                    targetCompatibility JavaVersion.VERSION_1_8
                }
            }
        }
    }
    tasks.withType(JavaCompile) {
        apply plugin: 'me.tatarka.retrolambda'
        retrolambda {
            oldJdk System.getenv("JAVA6_HOME")
        }
    }
}
