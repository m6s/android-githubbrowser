apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'com.github.triplet.play'

/*
 * Gets the version name from the latest Git tag.
 *
 * See http://ryanharter.com/blog/2013/07/30/automatic-versioning-with-git-and-gradle/
 */
def getGitTag = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    if (project.rootProject.file('playstore.properties').exists()) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('playstore.properties').newDataInputStream())
        play {
            serviceAccountEmail = properties.getProperty('play.serviceaccountemail')
            pk12File = file(properties.getProperty('play.pk12file'))
            uploadImages = true
        }
        signingConfigs {
            config {
                storeFile file(properties.getProperty('keystore.path'))
                storePassword properties.getProperty('keystore.password')
                keyAlias properties.getProperty('keystore.key.githubapp.alias')
                keyPassword properties.getProperty('keystore.key.githubapp.password')
            }
        }
        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.config
            }
        }
    }
    compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
    buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "info.mschmitt.githubapp.f"
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_VERSION)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        versionCode 10
        versionName getGitTag()
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
    }
}

dependencies {
    compile project(':libraries:ghnetwork')
    compile project(':libraries:ghentities')
    compile project(':libraries:ghandroid')
    compile project(':libraries:ghjava')
    compile group: 'com.android.support', name: 'appcompat-v7', version: project.DEPENDENCIES_ANDROID_SUPPORT_VERSION
    compile group: 'com.android.support', name: 'design', version: project.DEPENDENCIES_ANDROID_SUPPORT_VERSION
    compile group: 'com.android.support', name: 'support-annotations', version: project.DEPENDENCIES_ANDROID_SUPPORT_VERSION
    compile group: 'com.google.dagger', name: 'dagger', version: project.DEPENDENCIES_DAGGER_VERSION
    apt group: 'com.google.dagger', name: 'dagger-compiler', version: project.DEPENDENCIES_DAGGER_VERSION
    compile group: 'io.reactivex', name: 'rxandroid', version: project.DEPENDENCIES_RX_ANDROID_VERSION
    compile group: 'io.reactivex', name: 'rxjava', version: project.DEPENDENCIES_RX_VERSION
}
